#!/usr/bin/env node

/*
 * I es6-ified the file from the default provided by running
 * npx express-generator
 */

const app = require('../app');
const debug = require('debug')('smol-talk:server');
const http = require('http');

const normalizePort = val => {
  const port = parseInt(val, 10);
  if (isNaN(port))
    return val;
  if (port >= 0)
    return port;

  return false;
}

const port = normalizePort(process.env.PORT || '8000');
app.set('port', port);

const server = http.createServer(app);
server.listen(port, () => console.log(`Listening on port ${port}`));

server.on('error', err => {
  if (err.syscall !== "listen")
    throw err;
  
  const bind = typeof port === "string"
    ? "Pipe " + port
    : "Port " + port;

  switch (err.code) {
    case 'EACCES':
      console.error(`${bind} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(`${bind} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
});

server.on('listening', () => {
  const addr = server.address();

  const bind = typeof addr === "string"
    ? "pipe " + addr
    : "port " + addr.port;

  debug('Listening on ' + bind);
});
